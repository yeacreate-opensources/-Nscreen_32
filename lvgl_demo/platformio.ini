; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs = Nscreen-32
; default_envs = esp32doit-devkit-v1
; default_envs = esp12e
; default_envs = uno

data_dir = src/data
lib_dir	= libs

[env:Nscreen-32]
platform = espressif32
board = nscreen-32
framework = arduino
platform_packages =
  ; use a special branch
  ; framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#idf-release/v4.0
  	espressif/toolchain-xtensa-esp32@8.4.0+2021r2
	framework-arduinoespressif32@3.10006.210326
  ;framework-arduinoespressif32
; change microcontroller
board_build.mcu = esp32

; change MCU frequency
; 240000000L/ 160000000L / 80000000L
; set frequency to 240MHz
board_build.f_cpu = 240000000L
;20000000L
;26000000L
;40000000L (default)
;80000000L
board_build.f_flash = 80000000L
;qio
;qout
;dio
;dout
board_build.flash_mode = dio
board_build..boot= dio

;partitions
; check it here: https://github.com/espressif/arduino-esp32/tree/master/tools/partitions
; default = 1.5M
;
;Switch between built-in tables
; https://github.com/espressif/arduino-esp32/tree/master/tools/partitions
; https://github.com/espressif/esp-idf/tree/master/components/partition_table
board_build.partitions = partitions/custome_partitions_16M.csv

build_flags =
; https://docs.espressif.com/projects/esp-idf/en/latest/get-started/get-started-wrover-kit.html#rgb-led
 -DBOARD_HAS_PSRAM
; https://docs.platformio.org/en/latest/platforms/espressif32.html#external-ram-psram
 -mfix-esp32-psram-cache-issue

upload_protocol = esptool
upload_speed = 921600
monitor_speed = 115200


[env:esp12e]
platform = espressif8266 ;@2.2.3
;platform_packages =
;    framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git
board = esp12e
; Flash (default)
; build_flags = -DVTABLES_IN_FLASH
; Heap
;build_flags = -DVTABLES_IN_DRAM
; IRAM
;build_flags = -DVTABLES_IN_IRAM
framework = arduino
; 160000000L / 80000000L
; set frequency to 160MHz
board_build.f_cpu = 160000000L
;20000000L
;26000000L
;40000000L (default)
;80000000L
board_build.f_flash = 40000000L
;qio
;qout
;dio
;dout
board_build.flash_mode = dio
;eagle.flash.16m14m.ld
;eagle.flash.16m15m.ld
;eagle.flash.1m.ld
;eagle.flash.1m128.ld
;eagle.flash.1m144.ld
;eagle.flash.1m160.ld
;eagle.flash.1m192.ld
;eagle.flash.1m256.ld
;eagle.flash.1m512.ld
;eagle.flash.1m64.ld
;eagle.flash.2m.ld
;eagle.flash.2m128.ld
;eagle.flash.2m1m.ld
;eagle.flash.2m256.ld
;eagle.flash.2m512.ld
;eagle.flash.2m64.ld
;eagle.flash.4m.ld
;eagle.flash.4m1m.ld
;eagle.flash.4m2m.ld
;eagle.flash.4m3m.ld
;eagle.flash.512k.ld
;eagle.flash.512k128.ld
;eagle.flash.512k32.ld
;eagle.flash.512k64.ld
;eagle.flash.8m6m.ld
;eagle.flash.8m7m.ld
;eagle.rom.addr.v6.ld
; board_build.ldscript = eagle.flash.4m.ld
board_build.ldscript = eagle.flash.4m1m.ld
;-D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY v2 Lower Memory (default)
;-D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH v2 Higher Bandwidth
;-D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH v2 Lower Memory (no features)
;-D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH v2 Higher Bandwidth (no features)
;-D PIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_LOW_MEMORY v2 IPv6 Lower Memory
;-D PIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_HIGHER_BANDWIDTH v2 IPv6 Higher Bandwidth
;-D PIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH v1.4 Higher Bandwidth
; build_flags = -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY

build_flags = -DVTABLES_IN_FLASH -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
;upload_protocol = espota
upload_protocol = esptool
upload_speed = 115200
monitor_speed = 115200

[env:uno]
platform = atmelavr
board = uno
framework = arduino

